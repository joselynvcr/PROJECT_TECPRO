package saborea.model.dao;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.swing.JOptionPane;

import saborea.model.entities.Detalle_Pedido;
import saborea.model.entities.Empleado;
import saborea.model.entities.login;

public class Detalle_PedidoDAO implements IDAO {
	/*private BoletaDAO _Boleta;
	private int CantidadProductos;
	private ProductoDAO _Productos;
	private double precio;
	private double total;*/
	private Connection con=null;		
	private ArrayList<Detalle_Pedido> lista=new ArrayList<>();
	private Detalle_Pedido ObjDetallePedido=null;
	
	 public Detalle_PedidoDAO() {
		//vamos a conectar a la base de datos
		con= new ConnectionSaborea().getConnection();		
		
	}
	
	@Override
	public ArrayList<Detalle_Pedido> listar(boolean join) {
		
		
		try {
			//vamos a definir una sentencia SQL , sentencia SQL
			String SSQL= "select * from login l join empleado E on e.empleado_Id=l.empleado_id";		
			//Va a preparar nuestra sentencia SSQL segura para su ejecución 
			ps=con.prepareStatement(SSQL);
			//dentro de rs ya tengo todos los registros de mi tabla, necesito recorrer para cargar dentro de un objeto y posteriormente cargar cada objeto dentro de una lista
			//y por ultimo enviar un arraylist de todos los registros de la tabla 
			//ResulSet=conjunto de resultados, contiene los resultados de una consulta SQL
			ResultSet rs= ps.executeQuery();
			//mientras haya un registro todavia en resultset
			while(rs.next()){
				
				//FALSE
				if (!objsEmpleado){
					
					Objlogin=new login( 											
							rs.getInt("empleado_Id"),
							rs.getString("nom_User"), 
							rs.getString("Password"), 
							rs.getBoolean("estado"),
							null							
					);
				}
				else {
					//TRUE
					Objlogin=new login( 											
							rs.getInt("empleado_Id"),
							rs.getString("nom_User"), 
							rs.getString("Password"), 
							rs.getBoolean("estado"), 
							new Empleado(
								rs.getInt("empleado_Id"),
								rs.getInt("num_DNI"),
								rs.getString("nom_empleado"),
								rs.getString("ape_empleado"),
								rs.getInt("num_Telf"),
								rs.getString("casado"),
								rs.getString("gender_empleado"),
								rs.getDouble("sueldoBase_empleado"),							
								rs.getInt("numHijos_empleado"),
								rs.getString("empleado_tipoCargo"),
								rs.getInt("idJefe"),
								null
								)							
							);			
				//necesito agregar este objeto a mi lista
				lista.add(Objlogin);				
				}
		}	
			return lista;
			
		} catch (SQLException e) {
			//si hay un error en SSQL o en la conexiòn nos darà aviso
			JOptionPane.showMessageDialog(null,e.getMessage());
			//e.printStackTrace();			
		}		
		return null;
	}

	@Override
	public void insertar(Object obj) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void modificar(Object obj) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void eliminar(int cod) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public ArrayList buscar(Object objFind, boolean join) {
		// TODO Auto-generated method stub
		return null;
	}

	
	
	
	
	
	
	
}
